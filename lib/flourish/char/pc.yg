
from flourish.char import Character
from flourish.core import CELL_SIZE, Images, Sounds, TURN_LEFT_TABLE, TURN_RIGHT_TABLE, play_sound

DIR = "pc"
images = Images.new(DIR, ["attack0.png", "attack1.png", "attack2.png", "attack3.png", "turn_left.png", "turn_right.png", "walk0.png", "walk1.png", "walk2.png", "walk3.png", "walk4.png", "walk5.png", "walk6.png", "walk7.png"])
sounds = Sounds.new(DIR, ["attack.wav", "die.wav"])

def allocate_resources(&block)
  try
    images.allocate()
    sounds.allocate()
    block()
  finally
    sounds.free()
    images.free()
  end
end

FRAMES_PER_CELL = 20
PIXELS_PER_FRAME = CELL_SIZE // FRAMES_PER_CELL
IMG_TBL = [1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 6, 6, 7, 7, 0, 0, 0, 0]

class PlayerCharacter > Character
  def init()
    super(32, 32, nil, nil, nil)
    self.switch_image(0)
  end

  def move_right(ctrl)
    direction = self.direction
    if !ctrl.movable?(self, TURN_RIGHT_TABLE[direction])
      return
    end

    FRAMES_PER_CELL.times() do [i]
      if direction == 'north
        self.x += PIXELS_PER_FRAME
      elif direction == 'east
        self.y += PIXELS_PER_FRAME
      elif direction == 'south
        self.x -= PIXELS_PER_FRAME
      else
        self.y -= PIXELS_PER_FRAME
      end

      self.switch_image(IMG_TBL[i])
      Coroutine.yield()
    end
    ctrl.check_goal()
  end

  def switch_image(index)
    self.img = images["walk{0}.png".format(index)]
  end

  def move_left(ctrl)
    direction = self.direction
    if !ctrl.movable?(self, TURN_LEFT_TABLE[direction])
      return
    end

    FRAMES_PER_CELL.times() do [i]
      if direction == 'north
        self.x -= PIXELS_PER_FRAME
      elif direction == 'east
        self.y -= PIXELS_PER_FRAME
      elif direction == 'south
        self.x += PIXELS_PER_FRAME
      else
        self.y += PIXELS_PER_FRAME
      end

      self.switch_image(IMG_TBL[i])
      Coroutine.yield()
    end
    ctrl.check_goal()
  end

  def move_backward(ctrl)
    direction = self.direction

    tbl = { 'north: 'south, 'east: 'west, 'west: 'east, 'south: 'north }
    if !ctrl.movable?(self, tbl[direction])
      return
    end

    FRAMES_PER_CELL.times() do [i]
      if direction == 'north
        self.y += PIXELS_PER_FRAME
      elif direction == 'east
        self.x -= PIXELS_PER_FRAME
      elif direction == 'south
        self.y -= PIXELS_PER_FRAME
      else
        self.x += PIXELS_PER_FRAME
      end

      self.switch_image(IMG_TBL[i])
      Coroutine.yield()
    end
    ctrl.check_goal()
  end

  def attack(ctrl, char)
    [2, 2, 1, 1, 0, 0, 0, 1, 2, 3, 3].each() do [index]
      self.img = images["attack{0}.png".format(index)]
      Coroutine.yield()
    end
    play_sound(sounds["attack.wav"])
    ctrl.attack_npc(char)
  end

  def move_forward(ctrl)
    direction = self.direction
    if !ctrl.movable?(self, direction)
      return
    end

    CORRECTION = [-2, -2, 3, 3, 4, 4, -1, -1, -4, -4, -2, -2, 3, 3, 4, 4, -1, -1, -4, -4]
    FRAMES_PER_CELL.times() do [i]
      if direction == 'north
        self.y -= PIXELS_PER_FRAME + CORRECTION[i]
      elif direction == 'east
        self.x += PIXELS_PER_FRAME + CORRECTION[i]
      elif direction == 'south
        self.y += PIXELS_PER_FRAME + CORRECTION[i]
      else
        self.x -= PIXELS_PER_FRAME + CORRECTION[i]
      end

      self.switch_image(IMG_TBL[i])
      Coroutine.yield()
    end
    ctrl.check_goal()
  end

  def wait(n)
    n.times() do
      Coroutine.yield()
    end
  end

  def turn(img, tbl)
    self.img = images[img]
    self.wait(6)
    self.direction = tbl[self.direction]
    self.switch_image(0)
  end

  def turn_left()
    self.turn("turn_left.png", TURN_LEFT_TABLE)
  end

  def turn_right()
    self.turn("turn_right.png", TURN_RIGHT_TABLE)
  end

  def die()
    play_sound(sounds["die.wav"])
  end
end

# vim: tabstop=2 shiftwidth=2 expandtab softtabstop=2
