
from flourish.char import NonPlayerCharacter
from flourish.core import CELL_SIZE, Images, Sounds, play_sound

DIR = "stone"
images = Images.new(DIR, ["roll-horizontally0.png", "roll-horizontally1.png", "roll-horizontally2.png", "roll-horizontally3.png", "roll-horizontally4.png", "roll-vertically0.png", "roll-vertically1.png", "roll-vertically2.png", "roll-vertically3.png", "roll-vertically4.png"])
#sounds = Sounds.new(DIR, ["attack.wav", "die.wav"])

def allocate_resources(&block)
  try
    images.allocate()
    #sounds.allocate()
    block()
  finally
    images.free()
  end
end

SPEED = 16

class Stone > NonPlayerCharacter
  def init(x, y, direction)
    super(0, (1 << 30) - 1, x, y, direction)
    self.image_index = 0
    #self.act = self.stop
    self.act = self.run
  end

  def start()
    self.act = self.run
  end

  def run(ctrl)
    loop() do [i]
      pc = ctrl.pc
      if ((self.x - pc.x) ** 2 + (self.y - pc.y) ** 2 < SPEED ** 2)
        ctrl.attack_pc(self.strength)
        Coroutine.yield()
        next
      end
      diff_x, diff_y = self.get_diff_to_forward_cell(self.direction)
      self.x += SPEED * diff_x
      self.y += SPEED * diff_y
      self.image_index = (i + 1) % 5
      Coroutine.yield()
    end
  end

  def stop(ctrl)
    Coroutine.yield()
  end

  def get_up_image()
    # FIXME: Don't use the magic number.
    return images["roll-vertically{0}.png".format(4 - self.image_index)]
  end

  def get_right_image()
    return images["roll-horizontally{0}.png".format(self.image_index)]
  end

  def get_left_image()
    # FIXME: Don't use the magic number.
    return images["roll-horizontally{0}.png".format(4 - self.image_index)]
  end

  def get_down_image()
    return images["roll-vertically{0}.png".format(self.image_index)]
  end
end

# vim: tabstop=2 shiftwidth=2 expandtab softtabstop=2
