
from sdl import SDL_FreeSurface, SDL_Rect
from sdl.ttf import TTF_RenderText_Solid
import yogame

from flourish.core import FPS, close_font, make_color, open_font

WHITE = make_color(255, 255, 255)

class View > yogame.View
  def init(models, screen)
    super(screen)
    self.font = nil

    # assert models.kind_of?(flourish.char.pc.PlayerCharacter)
    self.kill_count = models.kill_count
    self.ticks = models.ticks
  end

  def allocate_resources(&block)
    self.font = open_font(32)
    try
      block()
    finally
      close_font(self.font)
    end
  end

  def draw_text(txt, color=WHITE, &block)
    surface = TTF_RenderText_Solid(self.font, txt, color)
    try
      self.blit_surface(surface, nil, block(surface))
    finally
      SDL_FreeSurface(surface)
    end
  end

  def draw_text_centering(txt, y)
    self.draw_text(txt) do [surface]
      h = surface.h

      dstrect = SDL_Rect.new()
      dstrect.x = self.screen.w // 2 - surface.w // 2
      dstrect.y = y
      next dstrect
    end
    return h
  end

  def draw_ticks(y)
    sec = self.ticks // FPS
    txt = "Time: {0} min {1} sec".format(sec // 60, sec % 60)
    return self.draw_text_centering(txt, y)
  end

  def draw()
    self.draw_text_centering("Congratulations", self.screen.h // 3)

    y = self.screen.h // 2
    y += self.draw_text_centering("kill count: {0}".format(self.kill_count), y)

    self.draw_ticks(y)
  end
end

# vim: tabstop=2 shiftwidth=2 expandtab softtabstop=2
